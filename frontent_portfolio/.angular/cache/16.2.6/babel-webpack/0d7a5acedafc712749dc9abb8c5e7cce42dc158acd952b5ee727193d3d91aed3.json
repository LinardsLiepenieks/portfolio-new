{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SectionInViewportDirective {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.sections = [];\n  }\n  ngOnInit() {\n    this.sections = Array.from(document.querySelectorAll('[appSectionInViewport]'));\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          this.scrollIntoViewSmoothly(entry.target);\n          this.elementRef.nativeElement.classList.add('section-in-viewport');\n          console.log(\"add\", this.elementRef.nativeElement.id);\n        } else {\n          console.log(\"Removing\", this.elementRef.nativeElement.id);\n          this.elementRef.nativeElement.classList.remove('section-in-viewport');\n        }\n      });\n    }, {\n      threshold: 0.4\n    });\n    this.sections.forEach(section => observer.observe(section));\n  }\n  scrollIntoViewSmoothly(element) {\n    element.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n  static #_ = this.ɵfac = function SectionInViewportDirective_Factory(t) {\n    return new (t || SectionInViewportDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: SectionInViewportDirective,\n    selectors: [[\"\", \"appSectionInViewport\", \"\"]]\n  });\n}","map":{"version":3,"names":["SectionInViewportDirective","constructor","elementRef","sections","ngOnInit","Array","from","document","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","scrollIntoViewSmoothly","target","nativeElement","classList","add","console","log","id","remove","threshold","section","observe","element","scrollIntoView","behavior","_","i0","ɵɵdirectiveInject","ElementRef","_2","selectors"],"sources":["/Users/3sstudio/Desktop/Portfolio/frontent_portfolio/src/app/section-in-viewport.directive.ts"],"sourcesContent":["import { Directive, ElementRef, OnInit  } from '@angular/core';\n@Directive({\n  selector: '[appSectionInViewport]'\n})\nexport class SectionInViewportDirective {\n  private sections: HTMLElement[] = [];\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit(){\n\n  this.sections = Array.from(document.querySelectorAll('[appSectionInViewport]'));\n\n  const observer = new IntersectionObserver(entries => {\n\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n\n          this.scrollIntoViewSmoothly(entry.target as HTMLElement);\n\n          this.elementRef.nativeElement.classList.add('section-in-viewport');\n          console.log(\"add\", this.elementRef.nativeElement.id)\n        } \n        else {\n\n          console.log(\"Removing\", this.elementRef.nativeElement.id)\n          this.elementRef.nativeElement.classList.remove('section-in-viewport');\n        }\n      });\n    }, {threshold: 0.4});\n    \n    this.sections.forEach(section => observer.observe(section));\n\n  }\n\n  private scrollIntoViewSmoothly(element: HTMLElement) {\n    element.scrollIntoView({ behavior: 'smooth' });\n  }\n\n\n}\n"],"mappings":";AAIA,OAAM,MAAOA,0BAA0B;EAErCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IADtB,KAAAC,QAAQ,GAAkB,EAAE;EACU;EAE9CC,QAAQA,CAAA;IAER,IAAI,CAACD,QAAQ,GAAGE,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;IAE/E,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAACC,OAAO,IAAG;MAElDA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAG;QACpB,IAAIA,KAAK,CAACC,cAAc,EAAE;UAExB,IAAI,CAACC,sBAAsB,CAACF,KAAK,CAACG,MAAqB,CAAC;UAExD,IAAI,CAACd,UAAU,CAACe,aAAa,CAACC,SAAS,CAACC,GAAG,CAAC,qBAAqB,CAAC;UAClEC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAE,IAAI,CAACnB,UAAU,CAACe,aAAa,CAACK,EAAE,CAAC;SACrD,MACI;UAEHF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACnB,UAAU,CAACe,aAAa,CAACK,EAAE,CAAC;UACzD,IAAI,CAACpB,UAAU,CAACe,aAAa,CAACC,SAAS,CAACK,MAAM,CAAC,qBAAqB,CAAC;;MAEzE,CAAC,CAAC;IACJ,CAAC,EAAE;MAACC,SAAS,EAAE;IAAG,CAAC,CAAC;IAEpB,IAAI,CAACrB,QAAQ,CAACS,OAAO,CAACa,OAAO,IAAIhB,QAAQ,CAACiB,OAAO,CAACD,OAAO,CAAC,CAAC;EAE7D;EAEQV,sBAAsBA,CAACY,OAAoB;IACjDA,OAAO,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAQ,CAAE,CAAC;EAChD;EAAC,QAAAC,CAAA,G;qBAhCU9B,0BAA0B,EAAA+B,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA1BlC,0BAA0B;IAAAmC,SAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}