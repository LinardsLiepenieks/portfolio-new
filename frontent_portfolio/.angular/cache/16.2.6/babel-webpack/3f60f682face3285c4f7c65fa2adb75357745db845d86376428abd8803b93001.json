{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SectionInViewportDirective {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n  }\n  ngOnInit() {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          // Element is in the viewport\n          this.elementRef.nativeElement.classList.add('section-in-viewport');\n          this.elementRef.nativeElement.scrollIntoView({\n            behavior: 'smooth'\n          });\n          console.log(this.elementRef.nativeElement);\n        } else {\n          // Element is not in the viewport\n          this.elementRef.nativeElement.classList.remove('section-in-viewport');\n        }\n      });\n    }, {\n      threshold: 0.4\n    });\n    observer.observe(this.elementRef.nativeElement);\n  }\n  static #_ = this.ɵfac = function SectionInViewportDirective_Factory(t) {\n    return new (t || SectionInViewportDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: SectionInViewportDirective,\n    selectors: [[\"\", \"appSectionInViewport\", \"\"]]\n  });\n}","map":{"version":3,"names":["SectionInViewportDirective","constructor","elementRef","ngOnInit","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","nativeElement","classList","add","scrollIntoView","behavior","console","log","remove","threshold","observe","_","i0","ɵɵdirectiveInject","ElementRef","_2","selectors"],"sources":["/Users/3sstudio/Desktop/Portfolio/frontent_portfolio/src/app/section-in-viewport.directive.ts"],"sourcesContent":["import { Directive, ElementRef, OnInit  } from '@angular/core';\n@Directive({\n  selector: '[appSectionInViewport]'\n})\nexport class SectionInViewportDirective {\n\n  constructor(private elementRef: ElementRef) { }\n  ngOnInit(){\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          // Element is in the viewport\n\n          this.elementRef.nativeElement.classList.add('section-in-viewport');\n          this.elementRef.nativeElement.scrollIntoView({ behavior: 'smooth' });\n          console.log(this.elementRef.nativeElement)\n        } else {\n          // Element is not in the viewport\n          this.elementRef.nativeElement.classList.remove('section-in-viewport');\n        }\n      });\n  }, {threshold: 0.4});\n        observer.observe(this.elementRef.nativeElement);\n\n  }\n\n}\n"],"mappings":";AAIA,OAAM,MAAOA,0BAA0B;EAErCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAC9CC,QAAQA,CAAA;IACR,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CAACC,OAAO,IAAG;MAClDA,OAAO,CAACC,OAAO,CAACC,KAAK,IAAG;QACpB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxB;UAEA,IAAI,CAACP,UAAU,CAACQ,aAAa,CAACC,SAAS,CAACC,GAAG,CAAC,qBAAqB,CAAC;UAClE,IAAI,CAACV,UAAU,CAACQ,aAAa,CAACG,cAAc,CAAC;YAAEC,QAAQ,EAAE;UAAQ,CAAE,CAAC;UACpEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,UAAU,CAACQ,aAAa,CAAC;SAC3C,MAAM;UACL;UACA,IAAI,CAACR,UAAU,CAACQ,aAAa,CAACC,SAAS,CAACM,MAAM,CAAC,qBAAqB,CAAC;;MAEzE,CAAC,CAAC;IACN,CAAC,EAAE;MAACC,SAAS,EAAE;IAAG,CAAC,CAAC;IACdd,QAAQ,CAACe,OAAO,CAAC,IAAI,CAACjB,UAAU,CAACQ,aAAa,CAAC;EAErD;EAAC,QAAAU,CAAA,G;qBApBUpB,0BAA0B,EAAAqB,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAA1BxB,0BAA0B;IAAAyB,SAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}