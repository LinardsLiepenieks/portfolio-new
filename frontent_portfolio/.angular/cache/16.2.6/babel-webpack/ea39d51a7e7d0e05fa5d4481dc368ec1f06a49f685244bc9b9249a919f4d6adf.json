{"ast":null,"code":"import { QueryList } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\".section-link\"];\nconst _c1 = function (a0) {\n  return {\n    active: a0\n  };\n};\nexport class NavbarComponent {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.links = new QueryList();\n    this.activeSection = \"landing\";\n  }\n  ngOnInit() {\n    // Create an Intersection Observer to watch for section visibility.\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          // The section is in the viewport, trigger your scroll action.\n          this.scrollToSection(this.links[0], entry.target.id);\n        }\n      });\n    });\n    // Observe each section you want to trigger automatic scrolling for.\n    this.sections.forEach(section => {\n      observer.observe(section);\n    });\n  }\n  scrollToSection(link, sectionId) {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n        inline: 'nearest' // Scroll to the nearest side if section is partially visible\n      });\n    }\n  }\n\n  onScroll(event) {\n    const viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n    const landingSection = document.getElementById(\"landing\");\n    const mainMenuSection = document.getElementById(\"main-menu\");\n    const contactInfoSection = document.getElementById(\"contact-info\");\n    const offset = 500;\n    if (landingSection && window.scrollY >= landingSection.offsetTop - offset && window.scrollY < mainMenuSection.offsetTop - offset) {\n      this.activeSection = \"landing\";\n    } else if (mainMenuSection && window.scrollY >= mainMenuSection.offsetTop - offset && window.scrollY < contactInfoSection.offsetTop - offset) {\n      this.activeSection = \"main-menu\";\n    } else if (contactInfoSection && window.scrollY >= contactInfoSection.offsetTop - offset) {\n      this.activeSection = \"contact-info\";\n    }\n  }\n  static #_ = this.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"app-navbar\"]],\n    viewQuery: function NavbarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.links = _t);\n      }\n    },\n    hostBindings: function NavbarComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"scroll\", function NavbarComponent_scroll_HostBindingHandler($event) {\n          return ctx.onScroll($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 11,\n    vars: 9,\n    consts: [[1, \"navbar\"], [1, \"navbar-inner\"], [1, \"navbar-link\", \"active\", 3, \"ngClass\", \"click\"], [\"homeLink\", \"\"], [1, \"navbar-link\", 3, \"ngClass\", \"click\"], [\"menuLink\", \"\"], [\"contactLink\", \"\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2, 3);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_2_listener() {\n          i0.ɵɵrestoreView(_r3);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(ctx.scrollToSection(_r0, \"landing\"));\n        });\n        i0.ɵɵtext(4, \"Home\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"a\", 4, 5);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_5_listener() {\n          i0.ɵɵrestoreView(_r3);\n          const _r1 = i0.ɵɵreference(6);\n          return i0.ɵɵresetView(ctx.scrollToSection(_r1, \"main-menu\"));\n        });\n        i0.ɵɵtext(7, \"About\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"a\", 4, 6);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_a_click_8_listener() {\n          i0.ɵɵrestoreView(_r3);\n          const _r1 = i0.ɵɵreference(6);\n          return i0.ɵɵresetView(ctx.scrollToSection(_r1, \"contact-info\"));\n        });\n        i0.ɵɵtext(10, \"Contact\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, ctx.activeSection === \"landing\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ctx.activeSection === \"main-menu\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, ctx.activeSection === \"contact-info\"));\n      }\n    },\n    dependencies: [i1.NgClass],\n    styles: [\".navbar[_ngcontent-%COMP%] {\\n  background-color: none;\\n  position: fixed;\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  justify-content: flex-end;\\n  z-index: 100;\\n}\\n\\n.navbar-inner[_ngcontent-%COMP%] {\\n  padding: 36px;\\n}\\n\\n.navbar-link[_ngcontent-%COMP%] {\\n  margin: 0 32px;\\n  font-size: var(--fs-md);\\n  opacity: 0.6;\\n  position: relative;\\n  transition: all 0.4s;\\n  text-decoration: none;\\n}\\n\\n.navbar-link[_ngcontent-%COMP%]::after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  height: 1px;\\n  width: 0%;\\n  bottom: -2px;\\n  left: 50%;\\n  background-color: var(--main-light);\\n  transition: all 0.4s;\\n}\\n\\n.navbar-link[_ngcontent-%COMP%]:hover {\\n  cursor: pointer;\\n  opacity: 0.9;\\n}\\n\\n.navbar-link[_ngcontent-%COMP%]:hover::after {\\n  width: 100%;\\n  left: 0;\\n}\\n\\n.navbar-link.active[_ngcontent-%COMP%] {\\n  opacity: 1;\\n}\\n\\n.navbar-link.active[_ngcontent-%COMP%]::after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  height: 1px;\\n  width: 100%;\\n  bottom: -2px;\\n  left: 0;\\n  background-color: var(--main-light);\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQXNCO0VBQ3RCLGVBQWU7RUFDZixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLG9CQUFvQjtFQUNwQixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxTQUFTO0VBQ1QsWUFBWTtFQUNaLFNBQVM7RUFDVCxtQ0FBbUM7RUFDbkMsb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxPQUFPO0FBQ1Q7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxXQUFXO0VBQ1gsWUFBWTtFQUNaLE9BQU87RUFDUCxtQ0FBbUM7QUFDckMiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2YmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgei1pbmRleDogMTAwO1xufVxuXG4ubmF2YmFyLWlubmVyIHtcbiAgcGFkZGluZzogMzZweDtcbn1cblxuLm5hdmJhci1saW5rIHtcbiAgbWFyZ2luOiAwIDMycHg7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZnMtbWQpO1xuICBvcGFjaXR5OiAwLjY7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNHM7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLm5hdmJhci1saW5rOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgaGVpZ2h0OiAxcHg7XG4gIHdpZHRoOiAwJTtcbiAgYm90dG9tOiAtMnB4O1xuICBsZWZ0OiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW4tbGlnaHQpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC40cztcbn1cblxuLm5hdmJhci1saW5rOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBvcGFjaXR5OiAwLjk7XG59XG5cbi5uYXZiYXItbGluazpob3Zlcjo6YWZ0ZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbGVmdDogMDtcbn1cblxuLm5hdmJhci1saW5rLmFjdGl2ZSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5uYXZiYXItbGluay5hY3RpdmU6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDFweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvdHRvbTogLTJweDtcbiAgbGVmdDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWFpbi1saWdodCk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["QueryList","NavbarComponent","constructor","renderer","links","activeSection","ngOnInit","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","scrollToSection","target","id","sections","section","observe","link","sectionId","element","document","getElementById","scrollIntoView","behavior","block","inline","onScroll","event","viewportHeight","window","innerHeight","documentElement","clientHeight","landingSection","mainMenuSection","contactInfoSection","offset","scrollY","offsetTop","_","i0","ɵɵdirectiveInject","Renderer2","_2","selectors","viewQuery","NavbarComponent_Query","rf","ctx","$event","ɵɵresolveWindow","ɵɵelementStart","ɵɵlistener","NavbarComponent_Template_a_click_2_listener","ɵɵrestoreView","_r3","_r0","ɵɵreference","ɵɵresetView","ɵɵtext","ɵɵelementEnd","NavbarComponent_Template_a_click_5_listener","_r1","NavbarComponent_Template_a_click_8_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c1"],"sources":["/Users/3sstudio/Desktop/Portfolio/frontent_portfolio/src/app/navbar/navbar.component.ts","/Users/3sstudio/Desktop/Portfolio/frontent_portfolio/src/app/navbar/navbar.component.html"],"sourcesContent":["import { Component, Renderer2, HostListener, ViewChildren, QueryList, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  @ViewChildren('.section-link') links: QueryList<ElementRef> = new QueryList;\n\n  public activeSection: string = \"landing\";\n  constructor(private renderer: Renderer2) { }\n\n  ngOnInit() {\n  // Create an Intersection Observer to watch for section visibility.\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        // The section is in the viewport, trigger your scroll action.\n        this.scrollToSection(this.links[0], entry.target.id);\n      }\n    });\n  });\n\n  // Observe each section you want to trigger automatic scrolling for.\n  this.sections.forEach(section => {\n    observer.observe(section);\n  });\n}\n\n  scrollToSection(link: HTMLAnchorElement, sectionId: string) {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth',\n      block: 'start', // Scroll to the top of the section\n      inline: 'nearest' // Scroll to the nearest side if section is partially visible\n      });\n    }\n  }\n\n  @HostListener('window:scroll', ['$event'])\n  onScroll(event: Event){\n    const viewportHeight = window.innerHeight || document.documentElement.clientHeight;\n    const landingSection = document.getElementById(\"landing\")\n    const mainMenuSection = document.getElementById(\"main-menu\")\n    const contactInfoSection = document.getElementById(\"contact-info\")\n    const offset = 500;\n    if(landingSection && window.scrollY >= landingSection.offsetTop - offset &&\n      window.scrollY < mainMenuSection!.offsetTop - offset) {\n        this.activeSection = \"landing\";\n        \n      }\n    else if(mainMenuSection && window.scrollY >= mainMenuSection.offsetTop - offset &&\n      window.scrollY < contactInfoSection!.offsetTop - offset) {\n        this.activeSection = \"main-menu\";\n      }\n    else if (contactInfoSection && window.scrollY >= contactInfoSection.offsetTop - offset) {\n      this.activeSection = \"contact-info\";\n      }\n\n    \n}\n}\n\n","<nav class=\"navbar\">\n  <div class=\"navbar-inner\">\n    <a\n      #homeLink\n      (click)=\"scrollToSection(homeLink, 'landing')\"\n      [ngClass]=\"{ active: activeSection === 'landing' }\"\n      class=\"navbar-link\"\n      class=\"navbar-link active\"\n      >Home</a\n    >\n    <a\n      #menuLink\n      (click)=\"scrollToSection(menuLink, 'main-menu')\"\n      [ngClass]=\"{ active: activeSection === 'main-menu' }\"\n      class=\"navbar-link\"\n      >About</a\n    >\n    <a\n      #contactLink\n      (click)=\"scrollToSection(menuLink, 'contact-info')\"\n      [ngClass]=\"{ active: activeSection === 'contact-info' }\"\n      class=\"navbar-link\"\n      >Contact</a\n    >\n  </div>\n</nav>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}